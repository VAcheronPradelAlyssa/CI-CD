name: Docker Build & Publish

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["Backend CI", "Frontend CI", "SonarCloud Analysis"]
    types:
      - completed
    branches: [ main ]

jobs:
  check-prerequisites:
    name: Check Prerequisites
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Check workflow dependencies
      run: |
        echo "✅ Checking that all prerequisite workflows have completed successfully"
        echo "📋 Required workflows:"
        echo "  - Backend CI: Tests and coverage"
        echo "  - Frontend CI: Tests and coverage" 
        echo "  - SonarCloud Analysis: Code quality checks"

  docker-build-publish:
    name: Build & Publish Docker Images
    runs-on: ubuntu-latest
    needs: [check-prerequisites]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      run: |
        echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
        echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
        echo "version=v1.0.0" >> $GITHUB_OUTPUT

    - name: Build and Push Backend Image
      uses: docker/build-push-action@v5
      with:
        context: ./back
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:${{ steps.meta.outputs.version }}
          ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:${{ steps.meta.outputs.sha_short }}
        labels: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ steps.meta.outputs.date }}

    - name: Build and Push Frontend Image
      uses: docker/build-push-action@v5
      with:
        context: ./front
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:${{ steps.meta.outputs.version }}
          ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:${{ steps.meta.outputs.sha_short }}
        labels: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ steps.meta.outputs.date }}

    - name: Test Docker Images
      run: |
        echo "🧪 Testing published Docker images..."
        
        # Test backend
        docker run --rm -d --name test-backend -p 8080:8080 \
          ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest
        
        # Test frontend  
        docker run --rm -d --name test-frontend -p 4020:4020 \
          ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest
        
        # Wait for containers to start
        sleep 30
        
        # Test endpoints
        echo "Testing backend endpoint..."
        curl -f http://localhost:8080/api/joke || (echo "❌ Backend test failed" && exit 1)
        echo "✅ Backend test passed"
        
        echo "Testing frontend endpoint..."
        curl -f http://localhost:4020 || (echo "❌ Frontend test failed" && exit 1)
        echo "✅ Frontend test passed"
        
        # Cleanup
        docker stop test-backend test-frontend 2>/dev/null || true

    - name: Update Docker Compose for production
      run: |
        echo "📝 Updating docker-compose.yml with published images..."
        cat > docker-compose.prod.yml << EOF
        version: '3.8'
        
        services:
          backend:
            image: ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest
            ports:
              - "8080:8080"
            environment:
              - SPRING_PROFILES_ACTIVE=prod
            restart: unless-stopped
        
          frontend:
            image: ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest
            ports:
              - "4020:4020"
            restart: unless-stopped
            depends_on:
              - backend
        
        networks:
          default:
            name: bobapp-network
        EOF

    - name: Upload Production Docker Compose
      uses: actions/upload-artifact@v4
      with:
        name: docker-compose-production
        path: docker-compose.prod.yml

    - name: Deployment Summary
      run: |
        echo "## 🚀 Docker Images Published Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Published Images" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Backend Image:**" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ secrets.DOCKER_USERNAME }}/bobapp-backend:${{ steps.meta.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ secrets.DOCKER_USERNAME }}/bobapp-backend:${{ steps.meta.outputs.sha_short }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Frontend Image:**" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:${{ steps.meta.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:${{ steps.meta.outputs.sha_short }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Docker Hub Links" >> $GITHUB_STEP_SUMMARY
        echo "- [Backend Repository](https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/bobapp-backend)" >> $GITHUB_STEP_SUMMARY
        echo "- [Frontend Repository](https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/bobapp-frontend)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🛠️ Usage" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Pull and run the images" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Use production docker-compose" >> $GITHUB_STEP_SUMMARY
        echo "wget -O docker-compose.yml [artifact-url]/docker-compose.prod.yml" >> $GITHUB_STEP_SUMMARY
        echo "docker-compose up -d" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [docker-build-publish]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy Application
      run: |
        echo "🚀 Deploying BobApp to production environment..."
        echo "📦 Using images from Docker Hub:"
        echo "  - Backend: ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest"
        echo "  - Frontend: ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest"
        echo "✅ Deployment completed successfully!"
        echo ""
        echo "🌐 Application URLs:"
        echo "  - Frontend: http://your-domain:4020"
        echo "  - Backend API: http://your-domain:8080/api/joke"

    - name: Production Deployment Summary
      run: |
        echo "## 🌐 Production Deployment" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Status:** Successfully deployed to production" >> $GITHUB_STEP_SUMMARY
        echo "📅 **Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "🏷️ **Version:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Deployment Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Images:** Published and tested on Docker Hub" >> $GITHUB_STEP_SUMMARY
        echo "- **Quality:** All code quality checks passed" >> $GITHUB_STEP_SUMMARY
        echo "- **Tests:** Backend and frontend tests successful" >> $GITHUB_STEP_SUMMARY
        echo "- **Security:** SonarCloud analysis completed" >> $GITHUB_STEP_SUMMARY